---
{{- if .Values.ruler.enabled -}}
{{- if eq .Values.kubeVersion "v1.18.1" }}
apiVersion: apps/v1
{{- else }}
apiVersion: extensions/v1beta1
{{- end }}
kind: Deployment
metadata:
  name: {{ template "fullname" . }}-ruler
  labels:
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    cortex: ruler
spec:
  replicas: {{ .Values.ruler.replicas }}
  selector:
    matchLabels:
      app: {{ template "name" . }}-ruler
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "name" . }}-ruler
        release: {{ .Release.Name }}
        cortex: ruler
    {{- with .Values.ruler.podAnnotations }}
      annotations:
{{ toYaml . | indent 8 }}
    {{- end }}
    spec:
      tolerations:
{{ toYaml .Values.ruler.tolerations | indent 8 }}
      affinity:
{{ toYaml .Values.ruler.affinity | indent 8 }}
      containers:
      - name: ruler
        image: "{{ .Values.ruler.image.repository }}:{{ .Values.ruler.image.tag }}"
        imagePullPolicy: IfNotPresent
        args:
        - -log.level=debug
        - -server.http-listen-port=80
        - -ruler.num-workers={{ .Values.ruler.workers }}
        {{ if .Values.ruler.useConfigs }}
        - -ruler.configs.url=http://{{ template "fullname" . }}-configs.{{ .Release.Namespace }}.svc.cluster.local:80
        {{- else -}}
        {{ if .Values.configsdb.enabled -}}
        - -database.uri=postgres://postgres@{{ template "fullname" . }}-configs-db.{{ .Release.Namespace }}.svc.cluster.local/configs?sslmode=disable
        {{- end }}
        {{- end }}
        - -ruler.alertmanager-url=http://{{ template "fullname" . }}-alertmanager.{{ .Release.Namespace }}.svc.cluster.local/api/prom/alertmanager/
        - -consul.hostname={{ template "fullname" . }}-consul.{{ .Release.Namespace }}.svc.cluster.local:8500
        - -dynamodb.original-table-name={{ index .Values "dynamodb" "original-table-name" }}
        {{ if not .Values.dynamodbLocal.enabled -}}
        {{ if .Values.aws.stsEnabled -}}
        - -dynamodb.url=dynamodb://$(AWS_DEFAULT_REGION)
        {{- else -}}
        - -dynamodb.url=dynamodb://$(USER_NAME):$(USER_PASSWORD)@$(AWS_DEFAULT_REGION)
        {{- end -}}
        {{- else -}}
        - -dynamodb.url=dynamodb://user:pass@{{ template "fullname" .}}-dynamodb.{{ .Release.Namespace }}.svc.cluster.local:8000
        {{- end }}
        {{ if eq .Values.s3.type "local" }}
        - -s3.url=s3://$(USER_NAME):$(USER_PASSWORD)@{{ .Values.s3.bucketName }}
        {{ else }}
        {{ if .Values.aws.stsEnabled }}
        - -s3.url=s3://{{ .Values.s3.bucketName }}
        {{ else }}
        - -s3.url=s3://$(USER_NAME):$(USER_PASSWORD)@{{ .Values.s3.bucketName }}
        {{ end }}
        {{ end }}
{{ include "cortex.tableargs" . | indent 8 }}
{{ include "cortex.memcachedArgs" . | indent 8 }}
        - -distributor.replication-factor={{ .Values.replicationFactor }}
        ports:
        - containerPort: 80
          name: http
        env:
          - name: AWS_DEFAULT_REGION
          {{ if .Values.aws.stsEnabled -}}
            value: "{{ .Values.aws.region }}"
          {{- else }}
            valueFrom:
              secretKeyRef:
                name: cortex-aws-creds
                key: AWS_DEFAULT_REGION
          {{- end }}
          {{ if .Values.aws.stsEnabled -}}
          - name: USER_NAME
            valueFrom:
              secretKeyRef:
                name: cortex-aws-creds
                key: USER_NAME
          - name: USER_PASSWORD
            valueFrom:
              secretKeyRef:
                name: cortex-aws-creds
                key: USER_PASSWORD
          {{- end }}
        resources:
{{ toYaml .Values.ruler.resources | indent 10 }}
{{- end }}
